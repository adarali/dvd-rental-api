server:
    error:
        include-stacktrace: never

app:
    initdata: true
    baseUrl: http://localhost:8080


spring:
    profiles:
        active: dev

    h2:
        console:
            enabled: true
    datasource:
        url: jdbc:h2:mem:testdb
    mail:
        host: smtp.gmail.com
        password: UJjgRg8inin2WXS
        port: 587
        properties:
            mail:
                smtp:
                    auth: true
                    starttls:
                        enable: true
        username: springboottestemail001@gmail.com

    security:
        oauth2:
            client:
                registration:
                    github:
                        client-id: ${GITHUB_CLIENT_ID}
                        client-secret: ${GITHUB_CLIENT_SECRET}
                        redirect-uri: http://localhost:8080/login/oauth2/code/github
                    google:
                        client-id: ${GOOGLE_CLIENT_ID}
                        client-secret: ${GOOGLE_CLIENT_SECRET}
                        redirect-uri: http://localhost:8080/login/oauth2/code/google
    cache:
        cache-names:
            - rate-limit-buckets
        caffeine:
            spec: maximumSize=100000,expireAfterAccess=3600s


jwt:
    timeout: 60
    secret: ${JWT_SECRET_KEY}



logging:
    level:
        org:
            springframework:
                web:
                    client:
                        RestTemplate: DEBUG





bucket4j:
    enabled: true
    filters:
        - cache-name: rate-limit-buckets
          url: /api/.*/movies.*
          strategy: first
          http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
          rate-limits:
              - expression: "getHeader('Authorization')"
                execute-condition: "getHeader('Authorization') != null && getHeader('Authorization').startsWith('Bearer ')"
                bandwidths:
                    - capacity: 10
                      time: 1
                      unit: minutes
              - expression: "getHeader('Authorization')"
                execute-condition: "getHeader('Authorization') == null"
                bandwidths:
                    - capacity: 40
                      time: 1
                      unit: hours
              - expression: "getHeader('Authorization')"
                bandwidths:
                    - capacity: 20
                      time: 1
                      unit: hours

springdoc:
    swagger-ui:
        path: /api-docs
